<!--Landing page-->
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="/css/app.css" />
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="../Resources/js/index.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU"
          crossorigin="anonymous" />
    <title>Redfish Telemetry Client</title>
</head>
<body>
    <div id="menuContainer"></div>
    <div>
        <div class="header">
            <i class="fas fa-bars menuIcon"></i>
        </div>
        <h1 class="text">{{ pageTitle }}</h1>
        <div class="separator"></div>
    </div>
    <!--<h1>{{ pageTitle }}</h1><a href="/">(testing) proceed to graphs page</a>-->
    <br />
    <br />
    <div>
        <div style="margin-left: 15%; display: inline-block">
            <h2>Please Select your Retrieval Method...</h2>
            <label for="polling">Polling (Default)</label>
            <input id="polling" name="type" type="radio" value="polling" checked="checked"/>
            <br />
            <label for="subscription">Subscription</label>
            <input id="subscription" name="type" type="radio" value="subscription" />
            <br />
            <label for="SSE">SSE Streaming</label>
            <input id="SSE" name="type" type="radio" value="sse" />
        </div>
    </div>
    <br />
    <div>
        <div style="margin-left: 15%; display: inline-block; float: left">
            <input type="button" value="Start" id="run" />
            <input type="button" value="View Graphs" id="view" />
            <h2>Please select your metrics...</h2>
            <ul class="list">
                {{#each metrics }}
                    <li class="metrics-defs" value="{{this}}" data-opened="closed">{{ this }}</li>
                    <ul class="metrics-indiv" data-parent="{{this}}"></ul>
                {{/each}}
            </ul>
        </div>
        <div id="dashboard">
            <span>Selected Metrics:</span>
            <br/>
            <div id="selectedMetrics"/>
        </div>
        <!--<div style="width: 30%; display: inline-block">-->
        <!--</div>-->
    </div>
</body>
<script>
   var selected = [];
   $('#view').prop('disabled', true);

    var selected = [];
    var sub_type = [];
    var newData = "";
    $('#view').prop('disabled', true);
    $('.metrics-indiv').hide();

    var menuOpened = false;
    let onMenuClick = () => {
      menuOpened = !menuOpened;
      let menuId = menuOpened ? "menuSurface" : "menuSurfaceClosing";
      let overlayId = menuOpened ? "overlay" : "overlayClosing";
      let menuHtml = 
         "<div id='" + menuId + "'>" +
            "<h1 class='menuTitle'>Menu</h1>" +
            "<div class='menuSeparator'></div>" +
            "<a href='/' class='menuLink selectedLink'>Metric Selections</a>" +
            "<div class='menuSeparator'></div>" +
            "<a href='/graphs' class='menuLink'>Panel Display</a>" +
            "<div class='menuSeparator'></div>" +
            "<a href='/datagenerator' class='menuLink'>Data Generator</a>" +
            "<div class='menuSeparator'></div>" +
         "</div>" + 
         "<div id='"+ overlayId +"' onclick='onMenuClick()'>"+
         "</div>";
      document.getElementById('menuContainer').innerHTML = menuHtml;
   };

      if (!menuOpened) {
         setTimeout(() => {
            document.getElementById('menuContainer').innerHTML = "";
         }, 500)
      }
   // }

   $(".menuIcon").on("click", onMenuClick);

    // Change the colors on the selection list
    $('.metrics-defs').on('click', function(){

        var metric = $(this).attr('value');
        // console.log(metric);
        if($(this).attr('data-opened') === 'closed') {

            $(this).attr('data-opened', 'opened');
            $(this).next().show();

            //AJAX get selected metrics
            $.ajax({
                context: this,
                url: "./api/metrics/" + metric,
                method: "GET",
                success: function (response) {
                    // console.log(response['MetricProperties']);
                    newData = response['MetricProperties'];
                    for(var i = 0; i < newData.length; i++){
                        $(this).next().append('<li class="data" data-selected="no" style="color: red;">' + newData[i].substr(60, newData[i].length) + '</li>');
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });

        } else{
            $(this).attr('data-opened', 'closed');
            $(this).next().hide();
        }
    });

    $('.metrics-indiv').on('click', '.data', function(e){
        e.preventDefault();
        var parent = $(this).parent().attr('data-parent');
        var individual = $(this).parent().text();

        if($(this).attr('data-selected') === 'no'){
            $(this).attr('data-selected', 'yes');
            $(this).css('color', 'green');

            if(!(selected.includes(parent))){
                selected.push(parent);
                var loc = selected.indexOf(parent);
                // console.log(loc);
                if(!(selected[loc].includes(individual))){
                    selected[loc].push(individual);
                }
            }
            console.log(selected);
            // selected.push($(this).text());

            //add to JSON
        } else{
            $(this).attr('data-selected', 'no');
            $(this).css('color', 'red');
            selected.splice(selected.indexOf($(this).text()), 1);
            //remove from JSON
        }
    });

    $('#run').on('click', function(e){
        e.preventDefault();

        sub_type["type"] = $('input[name=type]:checked').val();

        $('.metrics-list').each(function(){
           if($(this).attr('sel') === "Not Enabled"){
               $(this).css('color', 'green');

               var text = $(this).attr('value');
               var newText = text + " (Running)";

               $(this).text(newText);
           }
        });

        $('#view').prop('disabled', false);

        $.ajax({
           type: "POST",
           url: "",
           data: {type: sub_type}
        });

        $.ajax({
            type: "POST",
            url: "api/metrics",
            data: {payload: selected}
        });
    });

    $('#view').on('click', function(e){
        e.preventDefault();

        window.location.replace("/graphs");

        // $.ajax({
        //     type: "POST",
        //     url: "/something",
        //     data: {payload: selected}
        // });
    });

    let testSelectedMetrics = ['a','b','c']
    let selectedMetricsHtml = '';
    testSelectedMetrics.forEach(metric => {
        selectedMetricsHtml += '<p>'+metric+'</p>';
    });
    document.getElementById('selectedMetrics').innerHTML = selectedMetricsHtml;
    
    let updateDashboardList = () => {
        let selectedMetricsHtml = '';
        selected.forEach(metric => {
            selectedMetricsHtml += '<p>'+metric+'</p>';
        });
        document.getElementById('selectedMetrics').innerHTML = selectedMetricsHtml;
    }
</script>
</html>