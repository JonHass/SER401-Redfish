{{!-- {{
Copyright 2018, 2019 Andrew Antes, Andrew Bossie, Justin Kistler,
Wyatt Draggoo, Maigan Sedate

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
}} --}}

<!DOCTYPE html>
<html>

<head>
   <meta charset="UTF-8" />
   <link rel="stylesheet" href="/css/app.css" />
   <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet" />
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
   <script src="../resources/js/index.js"></script>
   <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU"
      crossorigin="anonymous" />
   <title>Redfish Insight</title>
</head>

<body>
   <div id="menuContainer"></div>
   <div>
      <div class="header">
         <i class="fas fa-bars menuIcon"></i>
      </div>
      <h1 class="text">{{ pageTitle }}</h1>
      <form>
         <input type="radio" name="theme" value="dark" checked="checked" onclick="updateTheme(true /*isDark*/);" /><span
            class="text">Light Theme</span>
         <input type="radio" name="theme" value="light" onclick="updateTheme(false /*isDark*/);" /><span class="text">Dark
            Theme</span>
      </form>
      <div class="separator"></div>
   </div>
   <div id="fullscreenPlaceholder"></div>
   <!-- Sidebar -->
   <div class="sidenav">
      <h4>
         <i class="fas fa-plus"></i><a href="#" id="add" style="text-decoration: none;">
            &nbsp;View panel(s)...</a>
      </h4>
      <ul class="dropdown">
         <li class="dropdownText" value="panel1">Thermal Status</li>
         <li class="dropdownText" value="panel2">System Board Inlet Temp</li>
         <li class="dropdownText" value="panel3">Thermal Table</li>
         <li class="dropdownText" value="panel4">PSU Output Power</li>
         <li class="dropdownText" value="panel5">Fan Speeds</li>
         <li class="dropdownText" value="showAll">Show All</li>
      </ul>
   </div>

   <!-- Main Content -->
   <div class="table_container">
      <table class="main_container"></table>
   </div>

   <!-- Footer -->
   <!-- <div class="footer"> -->
   <!-- {{> footer}} -->
   <!-- </div> -->
</body>
<script>
   var count = 0;
   var displayed = [];
   var allAddedPanels = [];
   var menuOpened = false;
   var fullScreenMode = false;
   var fullScreenPanel = -1;

   $("#add").click(function (e) {
      e.preventDefault();
      $("ul.dropdown").slideToggle("medium");
   });

   $(".dropdown li").on("click", function () {
      $("ul.dropdown").slideToggle("medium");
      updatePanel(this);
   });

   let onMenuClick = () => {
      menuOpened = !menuOpened;
      let menuId = menuOpened ? "menuSurface" : "menuSurfaceClosing";
      let overlayId = menuOpened ? "overlay" : "overlayClosing";
      let menuHtml =
         "<div id='" + menuId + "'>" +
            "<h1 class='menuTitle'>Menu</h1>" +
            "<div class='menuSeparator'></div>" +
            "<a href='/' class='menuLink'>Metric Selections</a>" +
            "<div class='menuSeparator'></div>" +
            "<a href='/graphs' class='menuLink selectedLink'>Panel Display</a>" +
            "<div class='menuSeparator'></div>" +
            "<a href='/datagenerator' class='menuLink'>Data Generator</a>" +
            "<div class='menuSeparator'></div>" +
         "</div>" +
         "<div id='"+ overlayId +"' onclick='onMenuClick()'>"+
         "</div>";
      document.getElementById('menuContainer').innerHTML = menuHtml;

      if (!menuOpened) {
         setTimeout(() => {
            document.getElementById('menuContainer').innerHTML = "";
         }, 500)
      }
   }

   $(".menuIcon").on("click", onMenuClick);

   let isThemeDark = true;
   let themeURLParam = "";

   setThemeString = () => {
      themeURLParam = isThemeDark ? "&theme=dark" : "&theme=light";
   };

   function updateTheme(isDark) {
      isThemeDark = isDark;
      if (isDark == false) {
         document.body.classList.add("themeLight");
      } else {
         document.body.classList = [];
      }
      setThemeString();
      updatePanels();
   }

   var panel1URL =
      "http://52.37.217.87:3000/d-solo/VIrfr66iz/metrics1?refresh=5s&panelId=2";
   var panel2URL =
      "http://52.37.217.87:3000/d-solo/VIrfr66iz/metrics1?refresh=5s&panelId=10";
   var panel3URL =
      "http://52.37.217.87:3000/d-solo/VIrfr66iz/metrics1?refresh=5s&panelId=12";
   var panel4URL =
      "http://52.37.217.87:3000/d-solo/VIrfr66iz/metrics1?refresh=5s&panelId=4";
   var panel5URL =
      "http://52.37.217.87:3000/d-solo/VIrfr66iz/metrics1?refresh=5s&panelId=21";
   var panel1Label = "Thermal Status";
   var panel2Label = "System Board Inlet Temp";
   var panel3Label = "Thermal Table";
   var panel4Label = "PSU Output Power";
   var panel5Label = "Fan Speeds";

   let getPanelData = (value) => {
      switch (value) {
         case 0:
            return {
               url: panel1URL + themeURLParam,
               label: panel1Label
            }
         case 1:
            return {
               url: panel2URL + themeURLParam,
               label: panel2Label
            }


         case 2:
            return {
               url: panel3URL + themeURLParam,
               label: panel3Label
            }

         case 3:
            return {
               url: panel4URL + themeURLParam,
               label: panel4Label
            }

         case 4:
            return {
               url: panel5URL + themeURLParam,
               label: panel5Label
            }
      }
      return {};
   }

   let updatePanel = panelElement => {
      var value;
      if (panelElement.type === "") {
         value = $(panelElement).index();
      } else {
         value = parseInt(panelElement, 10);
      }
      let panelData = getPanelData(value);
      var url = panelData.url;
      var label = panelData.label;

      if (value == 5) {
         let urls = [
            panel1URL + themeURLParam,
            panel2URL + themeURLParam,
            panel3URL + themeURLParam,
            panel4URL + themeURLParam,
            panel5URL + themeURLParam
         ];

         let labels = [
            panel1Label,
            panel2Label,
            panel3Label,
            panel4Label,
            panel5Label
         ];
         allAddedPanels = [0,1,2,3,4];
         let html = "";

         for (var index in urls) {
            html += buildPanelHtml(urls[index], labels[index], index)
         }

         $(".main_container").empty();
         $(".main_container").html(html);
         return;
      }

      if ($.inArray(value, displayed) !== -1) {
         alert("Panel already added!!");
      } else {
         displayed.push(value);
         if (!allAddedPanels.includes(value)) {
            allAddedPanels.push(value);
         }
         $(".main_container").append(buildPanelHtml(url, label, value));
      }
   };

   let buildPanelHtml = (url, label, index) => {
      let html = "";
      html += '<td class="panelCell">';
      html +=
         "<div id='panel_area_" +
         index +
         "'><iframe src=\"" +
         url +
         '" class="panelFrame" frameborder="0"></iframe>';
      html += '<div class="text">';
      html += "<span>";
      html +=
         "<i class='fa fa-trash del' aria-hidden='true' id='" +
         index +
         "'></i><i class='fa fa-expand expand' id='"+ index +"-expand'></i>";
      html += "<h2  class='text'>" + label + "</h2>";
      html += "</span>";
      html += "</div>";
      html += "</td>";
      return html;
   }

   $("body").on("click", ".del", function () {
      var index = displayed.indexOf(this.id);
      displayed.splice(index, 1);
      allAddedPanels.splice(index, 1);
      $("#panel_area_" + this.id).parent().remove();
   });

   $("body").on("click", ".expand", function () {
      if (fullScreenMode) {
         fullScreenMode = false;
         fullScreenPanel = -1;
      } else {
         fullScreenMode = true;
         fullScreenPanel = parseInt(this.id.split("-")[0]);
      }
      $("#fullscreenPlaceholder").empty()
      displayed = allAddedPanels;
      updatePanels();
   });

   let updatePanels = () => {
      $(".main_container").empty();

      if (fullScreenMode) {
         renderFullScreen();
      } else {
         $('body').removeClass('noScroll');
      }
      var tmp = displayed;
      displayed = [];
      for (var i = 0; i < tmp.length; i++) {
         updatePanel(tmp[i]);
      }
   };

   let renderFullScreen = () => {
      let panelData = getPanelData(fullScreenPanel);
      let themeClass = isThemeDark ? "darkInfo" : "lightInfo"
      $(window).scrollTop(0);
      let html =
            "<iframe src='" +
            panelData.url +
            "' class='panelFrameFullScreen' frameborder='0'></iframe>";
      html +=
            '<div class="fullScreenInfo ' + themeClass + '">' +
               "<h2 class='text'>" + panelData.label + "</h2>" +
               "<i class='fa fa-expand expand' id='"+ fullScreenPanel +"-expand'></i>" +
            "</div>";
      html += '<div class="leftArrow arrow-' + themeClass + '"><i class="fa fa-3x fa-arrow-left arrow" id="'+ fullScreenPanel +'-arrow-left"></i></div>';
      html += '<div class="rightArrow arrow-' + themeClass + '"><i class="fa fa-3x fa-arrow-right arrow" id="'+ fullScreenPanel +'-arrow-right"></i></div>'
      $(".main_container").append(html);
      $('body').addClass('noScroll');
   }

   $("body").on("click", ".arrow", function () {
      let currentPanelInArray = allAddedPanels.indexOf(fullScreenPanel);
      let leftArrow = this.id.split("-")[2] === 'left';
      if (leftArrow) {
         let newIndex = currentPanelInArray-1
         if (newIndex < 0) {
            newIndex = allAddedPanels.length -1;
         }
         fullScreenPanel = allAddedPanels[newIndex];
      } else {
         let newIndex = currentPanelInArray+1
         if (newIndex > allAddedPanels.length -1) {
            newIndex = 0;
         }
         fullScreenPanel = allAddedPanels[newIndex];
      }
      $("#fullscreenPlaceholder").append("<div class='placeholder'></div>")
      updatePanels();
   });
</script>

</html>
